% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stsp_methods.R
\name{state_trafo}
\alias{state_trafo}
\title{State Transformation}
\usage{
state_trafo(obj, T, inverse = FALSE)
}
\arguments{
\item{obj}{\code{\link{stsp}} object, represents a rational matrix \eqn{K(z)}.}

\item{T}{state transformation matrix. The parameter \code{T} must be a non-singular (s-by-s) matrix, or a vector
of length s^2 (in this case T is coerced to an s-by-s matrix) or a vector of length s. In the latter case
T is coerced to a diagonal s-by-s matrix.}

\item{inverse}{if TRUE, the transformation is reversed, i.e. 
\eqn{A \rightarrow T^{-1} A T}{A --> T^{-1} A T},
\eqn{B \rightarrow T^{-1} B}{B --> T^{-1} B} and
\eqn{C \rightarrow C T}{C --> C T}.}
}
\value{
\code{\link{stsp}} object which represents the transformed state space realization.
}
\description{
Applies a "state transformation" to a given rational matrix \eqn{K(z) = C(Iz^{-1} - A)^{-1}B +D} in statespace form. 
The parameter matrices are transformed as
\eqn{A \rightarrow T A T^{-1}}{A --> T A T^{-1}},
\eqn{B \rightarrow T B}{B --> T B} and
\eqn{C \rightarrow C T^{-1}}{C --> C T^{-1}}, where \eqn{T} is a non-singular (square) matrix.
}
\examples{
obj = stsp(A = c(0,0.2,1,-0.5),
           B = c(1,1), C = c(1,0))
           
# random state transformation
T = stats::rnorm(4)
obj1 = state_trafo(obj, T)

# obj and obj1 are equivalent, they produce the same IRF
testthat::expect_equivalent(pseries(obj), pseries(obj1))

# diagonal state transformation matrix
T = stats::rnorm(2)
obj1 = state_trafo(obj, T)

# revert the transformation
testthat::expect_equivalent(obj, state_trafo(obj1, T, inverse = TRUE))
\dontrun{
state_trafo(obj, stats::rnorm(9)) # dimension of T does not fit
state_trafo(obj, c(1,0))          # T = diag(c(1,0)) is singular!
}
}
