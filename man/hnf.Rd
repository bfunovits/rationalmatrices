% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polm_methods.R
\name{hnf}
\alias{hnf}
\title{Hermite Normal Form}
\usage{
hnf(a, from_left = TRUE, tol = sqrt(.Machine$double.eps), debug = FALSE)
}
\arguments{
\item{a}{Matrix polynomial, i.e. an object of class \code{\link{polm}}.}

\item{from_left}{Logical.
Default set to TRUE, in which case unimodular row-transformations are used to obtain 
the column Hermite normal form, i.e. \eqn{a(z) = u(z) h(z)}.
If FALSE, unimodular column-transformations are used to obtain the row Hermite 
normal form, i.e. \eqn{a(z) = h(z) u(z)}.}

\item{tol}{Tolerance parameter. Default set to \code{sqrt(.Machine$double.eps)}.}

\item{debug}{Logical. If TRUE, some diagnostic messages are printed.}
}
\value{
A list with the following slots.
\item{\code{h}}{\code{\link{polm}} object which represents the triangular matrix \eqn{h(z)}. 
                Depending on \code{from_left} the matrix \eqn{h(z)} is either quasi-upper- 
                or quasi-lower-triangular.}
\item{\code{u_inv}}{\code{\link{polm}} object, which represents the unimodular matrix 
                which transform \eqn{a(z)} into the desired normal form, 
                i.e. \eqn{h(z) = u^{-1}(z) a(z)}  or \eqn{h(z) = a(z)u^{-1}(z)}.}
\item{\code{u}}{\code{\link{polm}} object, which represents the unimodular matrix \eqn{u(z)} 
                such that \eqn{a(z) = u(z) h(z)} or  \eqn{a(z) = h(z)u(z)}.}
}
\description{
Calculate the \emph{column Hermite} (default) or \emph{row Hermite form} 
of a polynomial matrix \eqn{a(z)}, by using either (elementary) row operations (default) 
or column operations.
}
\details{
For any \eqn{(m,n)} dimensional polynomial matrix \eqn{a(z)} with rank \eqn{r} 
(when considered as rational matrix) there exists a unimodular matrix \eqn{u(z)} 
and indices \eqn{j(1)<j(2)<\cdots<j(r)}{j(1)<j(2)<\dots<j(r)} such that 
\eqn{h(z)= u^{-1}(z) a(z)} is "quasi-upper-triangular" in the sense that 
\itemize{
\item \eqn{h_{ij(i)}}{h[i,j(i)]} is monic (the coefficient pertaining to the highest 
      degree is equal to one), 
\item the elements above \eqn{h_{ij(i)}}{h[i,j(i)]} have lower polynomial degree 
      than \eqn{h_{ij(i)}}{h[i,j(i)]} and 
\item \eqn{h_{i,j}}{h[i,j]} is zero for \eqn{i >r} or \eqn{j < j(i)}.
}
The matrix \eqn{h(z)} is called the row Hermite form of \eqn{a(z)}. The matrix \eqn{u^{-1}(z)} 
corresponds to the sequence of elementary row operations which renders \eqn{a(z)} into the 
desired upper-triangular form.

Quite analogously one may transform the matrix \eqn{a(z)} by elementary column operations into 
"quasi-lower-triangular" form \eqn{h(z) = a(z)u^{-1}(z)}. The corresponding normal form is 
called \emph{row Hermite form}. 

For a more detailed description, see e.g., 
\insertCite{Kailath80}{rationalmatrices} (page 375, Theorem 375) or 
the package vignette "Rational Matrices".
}
\examples{
#####################################################################
# Generate polynomial matrix
square = test_polm(dim = c(2,2), degree = 3)
# wide matrix, where all elements have a common factor (1-z)
wide = test_polm(dim = c(2,3), degree = 2) * polm(c(1,-1))
# tall matrix with a "right factor" ((2 x2) random polynomial matrix)
tall = test_polm(dim = c(3,2), degree = 1) \%r\% 
          test_polm(dim = c(2,2), degree = 1, random = TRUE, digits = 1)

a = tall  # choose one of the above cases

############################
# column Hermite form
out = hnf(a)
print(out$h, digits = 2, format = 'c')

# check result(s)
all.equal(a, prune(out$u \%r\% out$h))
all.equal(polm(diag(dim(a)[1])), prune(out$u_inv \%r\% out$u))
if (dim(a)[1] == dim(a)[2]) {
  rbind(sort(zeroes(a)), sort(zeroes(out$h)))
}

############################
# row Hermite form
out = hnf(a, from_left = FALSE)
print(out$h, digits = 2, format = 'c')

# check result(s)
all.equal(a, prune(out$h \%r\% out$u))
all.equal(polm(diag(dim(a)[2])), prune(out$u_inv \%r\% out$u))
if (dim(a)[1] == dim(a)[2]) {
  rbind(sort(zeroes(a)), sort(zeroes(out$h)))
}
}
\references{
\insertRef{Kailath80}{rationalmatrices}
}
