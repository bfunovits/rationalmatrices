% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R
\name{lpolm}
\alias{lpolm}
\title{Constructor for Laurent Polynomial Matrices}
\usage{
lpolm(a, min_deg = 0)
}
\arguments{
\item{a}{either a (numeric or complex) vector, matrix or 3-D array. A vector is coerced to a scalar 
(i.e. \eqn{(1,1)}-dimensional) polynomial and a matrix gives a Laurent polynomial matrix whose only coefficient matrix is of degree \code{min_deg}.}

\item{min_deg}{Integer. Default set to zero. Smallest degree in the Laurent polynomial.
Negative for Laurent polynomials which cannot be coerced to \code{\link{polm}} objects (\code{\link{as.polm}} throws an error).}
}
\value{
An object of class \code{c("lpolm", "ratm")}. 
        When non-negative, the object is still of this class. 
        However, it can then be coerced to an object of class \code{c("polm", "ratm")} using \code{\link{as.polm}}
}
\description{
\code{lpolm} objects represent Laurent polynomial matrices of the form
\deqn{a(z) = a_{-q} z^{-q} + \cdots + a_{-1} z^{-1} + a_0 + a_1 z + \cdots + a_p z^p}{
      a(z) = a[-q] (1/z)^q + \cdots + a[-1] 1/z + a[0] + a[1]z + \dots + a[p]z^p.}
If \eqn{a(z)} is an \eqn{(m,n)} dimensional Laurent polynomial matrix
(i.e. the coefficients \eqn{a_i}{a[i]} are \eqn{(m,n)} dimensional real or complex valued matrices),
then the \code{lpolm} object stores the coefficients in 
an \code{(m,n,q+p+1)}-dimensional (numeric or complex) array \eqn{a_{-q}, \ldots, a_{-1}, a_{0}, a_{1}, \ldots, a_{p}},
together with a class attribute \code{c("lpolm","ratm")}. 
\cr
The constructor function \code{lpolm(a, min_deg)} takes an integer \code{min_deg} (default is zero) and 
a (numeric or complex) vector, matrix or 3-dimensional array and returns an \code{lpolm} object.
}
\details{
Any of the dimensions of the 3-dimensional array may also be zero. 
In particular, if the third dimension is zero, then the \code{lpolm} object is interpreted as the zero Laurent polynomial.

This class is special in the sense that it is not possible to \emph{upgrade} it to an \code{\link{lmfd}}, \code{\link{rmfd}}, \code{\link{stsp}}, or \code{\link{pseries}} object.

For important methods and functions for this class have a look at the "see also" section.
Note that some functions are only written for \code{\link{polm}} objects: \code{\link{degree}}, \code{\link{col_end_matrix}}, normal forms like \code{\link{snf}}, \code{\link{hnf}}, \code{\link{whf}}.
}
\examples{
# (1 x 1) Laurent polynomial matrix a(z) =  3z^{-2} + 2z^{-1} + 1
lpolm(3:1, min_deg = -2)

# Non-negative minimal degrees are allowed too (no implicit coercion to polm object)
lpolm(3:1, min_deg = 2)

lpolm(matrix(1:4,2,2), min_deg = -2)

}
\seealso{
\itemize{
   \item \code{\link{polm}}.
   \item \code{\link{test_lpolm}} generates random polynomials. 
   \item checks: \code{\link{is.lpolm}}
   \item generic S3 methods: \code{\link[rationalmatrices]{dim}}, 
         \code{\link[rationalmatrices]{str}} and \code{\link[rationalmatrices]{print}}.
   \item arithmetics: \code{\link[rationalmatrices]{Ops.ratm}}, matrix multiplication \code{\link{\%r\%}}
   \item matrix operations: \code{\link[rationalmatrices]{t.lpolm}}, 
         \code{\link[rationalmatrices]{bind}}, \code{\link{[.lpolm}}, \code{\link{[<-.lpolm}}, ...
   \item \code{\link{prune}} discards leading and trailing zero matrices of Laurent polynomials. 
   \item \code{\link{get_bwd}} discards all coefficient matrices pertaining to \strong{negative} powers and returns a polm object.
   \item \code{\link{get_fwd}} discards all coefficient matrices pertaining to \strong{positive} powers. It returns thus an lpolm object.
   \item \code{\link{polm2fwd}} performs the transformation \eqn{p(z) \rightarrow p(z^{-1})} on a polm object and returns an lpolm object.
}
}
