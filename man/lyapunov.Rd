% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lyapunov.R
\name{lyapunov}
\alias{lyapunov}
\title{Lyapunov Equation}
\usage{
lyapunov(A, Q, non_stable = c("ignore", "warn", "stop"), attach_lambda = FALSE)
}
\arguments{
\item{A, Q}{\eqn{(m,m)} matrices. Note that the routine silently assumes that
\eqn{Q} is symmetric (and hence the solution \eqn{P} is also symmetric).}

\item{non_stable}{(character string) indicates what to do, when \eqn{A} is not stable.}

\item{attach_lambda}{(boolean) if yes, then the eigenvalues of \eqn{A} are
attached to the solution \eqn{P} as an attribute.}
}
\value{
P (\eqn{(m,m)} matrix) the  solution of the Lyapunov equation.
}
\description{
This function solves the Lyapunov equation
\deqn{P = A P A' + Q}
where \eqn{A,Q} are real valued, square matrices and \eqn{Q} is symmetric.
The Lyapunov equation has a unique solution if 
\eqn{\lambda_i(A)\lambda_j(A) \neq 1}{\lambda_i(A)\lambda_j(A) != 1} holds 
for all eigenvalues of \eqn{A}.  
If \eqn{A} is stable (i.e. the spectral radius of \eqn{A} is less than one) and
\eqn{Q} is positive semidefinite then the solution \eqn{P} is also positive semidefinite.
\cr
The procedure uses the Schur decomposition(s) of \eqn{A} and computes 
the solution "column by column",
see \insertCite{Kitagawa77,Hammarling1982}{rationalmatrices}.
}
\examples{
# A is stable and Q is positve definite
m = 4
A = diag(runif(m, min = -0.9, max = 0.9))
V = matrix(rnorm(m*m), nrow = m, ncol = m)
A = V \%*\% A \%*\% solve(V)
B = matrix(rnorm(m*m), nrow = m, ncol = m)
Q = B \%*\% t(B)
P = lyapunov(A, Q)
all.equal(P, A \%*\% P \%*\% t(A) + Q)

# unstable matrix A
A = diag(runif(m, min = -0.9, max = 0.9))
A[1,1] = 2
V = matrix(rnorm(m*m), nrow = m, ncol = m)
A = V \%*\% A \%*\% solve(V)
P = lyapunov(A, Q)
all.equal(P, A \%*\% P \%*\% t(A) + Q)
# note that the solution P (in general) is not positive semidefinite
eigen(P, only.values= TRUE, symmetric = TRUE)$values

# attach the eigenvalues of A to the solution P
P = lyapunov(A, Q, attach = TRUE)
print(P)

# issue a warning message
P = lyapunov(A, Q, non_stable = 'warn')

\dontrun{
# throw an error
P = lyapunov(A, Q, non_stable = 'stop')
}
}
\references{
\insertRef{Kitagawa77}{rationalmatrices}

\insertRef{Hammarling1982}{rationalmatrices}
}
