% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derivative.R
\name{derivative}
\alias{derivative}
\alias{derivative.lpolm}
\alias{derivative.polm}
\alias{derivative.lmfd}
\alias{derivative.rmfd}
\alias{derivative.stsp}
\alias{derivative.pseries}
\alias{derivative.zvalues}
\title{Derivative of a rational Matrix}
\usage{
derivative(obj, ...)

\method{derivative}{lpolm}(obj, ...)

\method{derivative}{polm}(obj, ...)

\method{derivative}{lmfd}(obj, ...)

\method{derivative}{rmfd}(obj, ...)

\method{derivative}{stsp}(obj, ...)

\method{derivative}{pseries}(obj, ...)

\method{derivative}{zvalues}(obj, ...)
}
\arguments{
\item{obj}{an object of class \code{\link{polm}},  \code{\link{stsp}} or  \code{\link{pseries}}.}

\item{...}{not used}
}
\value{
an object of the same class as the argument \code{obj}
}
\description{
Computes the derivative of a rational matrix \eqn{k(z)} (with repect to the complex variable \eqn{z}). 
Note that computing the derivative for an impulse response object decreases the number of lags by one!
}
\examples{
# create random (3 by 2) polynomial matrix with degree 2
K = test_polm(dim = c(3,2), degree = 2)
derivative(K)
derivative(derivative(K))
derivative(derivative(derivative(K)))

# note: computing the derivative of the impulse response 
# decreases "lag.max" by one!
all.equal(pseries(derivative(K)), derivative(pseries(K, lag.max = 6)))

# create statespace realization of a random (3 by 2) rational matrix
# with statespace dimension s = 4
K = test_stsp(dim = c(2,2), s = 4, bpoles = 1)
all.equal(pseries(derivative(K)), derivative(pseries(K, lag.max = 6)))

\dontrun{
# 'lmfd' objects and 'zvalues' objects are not supported
derivative(test_lmfd(dim = c(3,3), degrees = c(1,1)))
derivative(zvalues(K))
}
}
