% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polm_methods.R
\name{get_fwd}
\alias{get_fwd}
\alias{get_bwd}
\title{Forward and Backward Bracket}
\usage{
get_fwd(lpolm_obj)

get_bwd(lpolm_obj)
}
\arguments{
\item{lpolm_obj}{Laurent polynomial object \code{\link{lpolm}}}
}
\value{
Laurent polynomial object \code{\link{lpolm}} without non-negative coefficients or without negative
}
\description{
For an \code{\link{lpolm}} object as input, \code{get_bwd} discards all coefficient matrices pertaining to \strong{negative} powers and returns a \code{\link{lpolm}} object with \code{min_deg = 0}.
Similarly, \code{get_fwd} discards all coefficient matrices pertaining to \strong{non-negative} powers, and also returns an \code{\link{lpolm}} object.
}
\details{
Obtain the forward or backward part of a Laurent polynomial, i.e. apply \eqn{[.]_-} or \eqn{[.]_+} to 
\deqn{a(z) = a_{-q} z^{-q} + \cdots + a_{-1} z^{-1} + a_0 + a_1 z^1 + \cdots + a_p z^p}{
      a(z) = a[-q] z^(-q) + \dots + a[-1] z^{-1} + a[0] + a[1] z^1 + \dots + a[p] z^p}
and obtain for \code{get_fwd}
\deqn{[a(z)]_- = a_{-q} z^{-q} + \cdots + a_{-1} z^{-1}}{
      [a(z)]_- = a[-q] z^(-q) + \dots + a[-1] z^{-1}}
or for \code{get_bwd}
\deqn{[a(z)]_+ = a_0 + a_1 z^1 + \cdots + a_p z^p}{
      [a(z)]_+ = a[0] + a[1] z^1 + \dots + a[p] z^p}
}
\examples{
(lp = test_lpolm(degree_max = 2, degree_min = -2))
get_fwd(lp)
(lp = test_lpolm(degree_max = 2, degree_min = -2))
get_bwd(lp)

(lp = lpolm(1:3, min_deg = 2))
get_bwd(lp)

(lp = lpolm(1:3, min_deg = -1))
get_bwd(lp)

(lp = lpolm(1:3, min_deg = -5))
get_bwd(lp)
}
