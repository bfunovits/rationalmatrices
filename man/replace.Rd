% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_methods.R
\name{replace}
\alias{replace}
\alias{[<-.polm}
\alias{[<-.lpolm}
\title{Replace Parts of a (Laurent) Polynomial Matrix}
\usage{
\method{[}{polm}(x, i, j) <- value

\method{[}{lpolm}(x, i, j) <- value
}
\arguments{
\item{x}{\code{\link{polm}} or \code{\link{lpolm}} object}

\item{i, j}{indices}

\item{value}{Either a \code{\link{polm}} or \code{\link{lpolm}} object, or a vector/matrix/array which may be coerced to 
a \code{polm} or \code{\link{lpolm}} object by \code{polm(value)} or \code{lpolm(value)}.}
}
\description{
The assignment operation \code{x[,] <- value} for (Laurent) polynomial matrices works quite analogously 
to the assignment operation of "ordinary" matrices. 
\cr
In the case of Laurent polynomial objects \code{\link{lpolm}} and if \code{value} is not an \code{\link{lpolm}} object itself 
(i.e. \code{value} is a vector, matrix, or array), \code{value} will first be coerced to an \code{\link{lpolm}} object with \code{min_deg = 0}.
}
\details{
Note that "named" arguments are not supported (in order to simplify the coding).
}
\examples{
a = test_polm(dim = c(3,2), degree = 1)
print(a, format = 'c')

a[FALSE] = 0           # no items to replace,
print(a, format = 'c') # a is not changed

a[lower.tri(matrix(0, nrow = 3, ncol = 2))] = 0 # set elements below the 
print(a, format = 'c')                          # diagonal equal to zero

a[3,1] = c(1,-1)       # set (3,1) element
print(a, format = 'c') # equal to (1 - z)

a[1:2, 2:1] = c(0,1)   # set the elements in rows 1,2 and coluimns 1,2
print(a, format = 'c') # equal to z

a[2, ] = test_polm(dim = c(1,2), degree = 4)
print(a, format = 'c')

a[, 1] = test_polm(dim = c(2,1), degree = 4) # this gives a warning
print(a, format = 'c')

\dontrun{
a[i=1] = 0   # named arguments are not supported
}  
(lp = lpolm(1:3, min_deg = -1))
lp[1] = 0
lp

(lp = lpolm(1:3, min_deg = -1))
lp[1] = polm(1:4)
lp

(lp = lpolm(1:3, min_deg = -1))
lp[1] = lpolm(1, min_deg = 0)
lp
}
