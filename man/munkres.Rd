% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/munkres.R
\name{munkres}
\alias{munkres}
\title{Munkres Assignment Algorithm}
\usage{
munkres(C)
}
\arguments{
\item{C}{(\eqn{(m,n)} numeric matrix) \eqn{C_{ij}}{C[i,j]} represents the cost for assigning
the \eqn{j}-th "job" to the \eqn{i}-th "agent".}
}
\value{
List with slots 
\item{a}{(\eqn{(k,2)} dimensional (integer) matrix where \eqn{k=\min(m,n)}{k=min(m,n)}. This matrix 
         represents the optimal assignment. For each \eqn{i=1,\ldots,k} the task   
             \code{a[i,2]} is assigned to agent \code{a[i,1]}.}
\item{c}{Total cost for this (optimal) assignment
            \code{c = C[a[1,1], a[1,2]] + ... + C[a[k,1], a[k,2]]}.}
\item{C}{The cost matrix.}
}
\description{
This algorithm solves the \emph{assignment problem}: Given a set of \eqn{m} "agents" and 
\eqn{n} "tasks" with agent-task specific costs. Find an assignment of tasks to agents such that 
the total cost is \emph{minimal}, given the following restrictions. A task may be assigned to 
at most one agent and an agent may be assigned to at most one task. In total 
\eqn{k=\min(m,n)}{k=min(m,n)} assignments are required. (E.g. if there are less agents than tasks
then each agent gets a "job", however, \eqn{n-m} tasks remain unaccomplished. )
}
\details{
The original references are \insertCite{Munkres1956}{rationalmatrices} and  
\insertCite{BourgeoisLassalle1971}{rationalmatrices} for the non-square case.
}
\examples{
C = matrix(c (0, 0, 0, 0, 0, 1, 3, 3, 0, 5, 5, 9, 0, 1, 3, 7), 
           nrow = 4, ncol = 4, byrow = TRUE)
out = munkres(C)
print(out)
}
\references{
\insertRef{Munkres1956}{rationalmatrices}

\insertRef{BourgeoisLassalle1971}{rationalmatrices}
}
\seealso{
This helper function is mainly needed to match poles (zeroes).
}
\keyword{internal}
